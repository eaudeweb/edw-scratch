import os
instance_dir = os.path.abspath(os.path.dirname(__file__))

SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(instance_dir, 'scraper.db')
#SQLALCHEMY_DATABASE_URI = 'mysql+mysqldb://scratch:scratch@mysql/scratch?charset=utf8&use_unicode=0'
DEBUG = True

WHOOSH_BASE = os.path.join(
    os.path.abspath(os.path.dirname(os.path.dirname(__file__))),
    'whoosh_index'
)

FILES_DIR = os.path.join(instance_dir, 'files')
SERVER_NAME = 'localhost'

# email server
MAIL_SERVER = 'smtp.googlemail.com'
MAIL_PORT = 465
MAIL_USE_TLS = False
MAIL_USE_SSL = True
MAIL_USERNAME = 'your-gmail-username'
MAIL_PASSWORD = 'your-gmail-password'

# administrator list
NOTIFY_EMAILS = ['your-edw-username@eaudeweb.ro']

# UNSPSCs codes
UNSPSC_CODES = []

USERNAME = 'edw'
PASSWORD = 'edw'

SECRET_KEY = 'knsdkf309120dskfllkl312kj'

TED_USERNAME = ''
TED_PASSWORD = ''

CPV_CODES = []

# at first run, TED worker will download notices more recent than
# current_date - TED_DAY_AGO (by default 30 days)
TED_DAYS_AGO = 3

TED_COUNTRIES = []
TED_DOC_TYPES = []
TED_AUTH_TYPE = ''

DISABLE_UNGM_DOWNLOAD = False

# Set this as the maximum number of tries scraper will attempt to get data from
# UNGM.
MAX_UNGM_REQUESTS = 3

# Set this as being a list representing a sequence of number of days.
# If, for example, 3 is in that list, mail alerts are sent to mail when
# there are 3 or less days remaining until deadline for each favourite tender is
# achieved.
DEADLINE_NOTIFICATIONS = [1, 3, 7]
